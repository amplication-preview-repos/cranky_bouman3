/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AcceptanceLetterListRelationFilter } from "../../acceptanceLetter/base/AcceptanceLetterListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { AdmissionLetterListRelationFilter } from "../../admissionLetter/base/AdmissionLetterListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { EnumStudentPaymentStatus } from "./EnumStudentPaymentStatus";
import { TimetableListRelationFilter } from "../../timetable/base/TimetableListRelationFilter";

@InputType()
class StudentWhereInput {
  @ApiProperty({
    required: false,
    type: () => AcceptanceLetterListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AcceptanceLetterListRelationFilter)
  @IsOptional()
  @Field(() => AcceptanceLetterListRelationFilter, {
    nullable: true,
  })
  acceptanceLetters?: AcceptanceLetterListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AdmissionLetterListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AdmissionLetterListRelationFilter)
  @IsOptional()
  @Field(() => AdmissionLetterListRelationFilter, {
    nullable: true,
  })
  admissionLetters?: AdmissionLetterListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  password?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payments?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumStudentPaymentStatus,
  })
  @IsEnum(EnumStudentPaymentStatus)
  @IsOptional()
  @Field(() => EnumStudentPaymentStatus, {
    nullable: true,
  })
  paymentStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: () => TimetableListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimetableListRelationFilter)
  @IsOptional()
  @Field(() => TimetableListRelationFilter, {
    nullable: true,
  })
  timetables?: TimetableListRelationFilter;
}

export { StudentWhereInput as StudentWhereInput };
